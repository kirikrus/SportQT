#include "SportQT.h"
#include "user.h"

/*
Функциональные требования к программе:
1. Перечень тренировок. Создать список всех тренировок, где для каждой тренировки можно просматривать и редактировать информацию.
2. Копирование предыдущей тренировки. Реализовать функцию копирования предыдущей тренировки при создании новой, с отображением полной информации о ней и предложением нового веса для каждого упражнения в зависимости от количества подходов:
	1 подход - 55% от максимального веса на последнем подходе + 1 кг/0,5 кг
	2 подход - от 65% до 70% от максимального веса на последнем подходе + 1 кг/0,5 кг
	3 подход - 100% от максимального веса на последнем подходе + 1 кг/0,5 кг
	Если подходов было больше, предложить разбить вес пропорционально, начиная с 55% от максимального веса последнего подхода (или свой вариант).
3. Встроенная программа из 2 лабораторной работы. Интегрировать программу, которая при нажатии на вес упражнения с гантелей или штангой выдает предложение о том, как собрать данный вес.
4. База упражнений. База данных упражнений, где можно добавлять, редактировать и удалять упражнения, включая информацию о мышцах, которые задействованы, и типе упражнения (например, силовое, кардио и т.д.).
5. Информация о прогрессе по сравнению двух предыдущих тренировок.
	Например, если пользователь выполнил тренировку с весом 50 кг, 3 подхода и 8 повторениями, а затем выполнил тренировку с весом 55 кг, 3 подхода и 10 повторениями, то программа может рассчитать прогресс следующим образом:
	Увеличение веса: 55 кг - 50 кг = 5 кг (10% прирост).
	Увеличение количества повторений: 10 повторений - 8 повторений = 2 повторения (25% прирост).
	Увеличение общей нагрузки: 
	(55 кг x 3 подхода x 10 повторений) - (50 кг x 3 подхода x 8 повторений) = 150 кг (25% прирост).*/
void copy_paste() {}

void setUP(exercise * exercise, quint16 approach_count, quint16 max_weight) {
	quint16 proc{.45 / approach_count};
	quint16 cur_proc = .55;
	for (int i{ 0 }; i <= approach_count; i++) {
		exercise->approach[i].weight = cur_proc * max_weight;
		cur_proc += proc;
	}
}